# No ports are published via ports: - "port:port" this isolates all the containers and does not map any ports to the host
# nginx confg will use the container_name in default.conf
# Cloudflare tunnel public hostnames and catch-all rule will need to be changed from 'localhost' to the nginx container_name 'nginx'
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ${NGINX_CONF}:/etc/nginx/templates/default.conf.template:ro
      - ${NGINX_CERT}:/etc/ssl/cert.pem:ro
      - ${NGINX_KEY}:/etc/ssl/key.pem:ro
    environment:
      - YOUR_DOMAIN=${DOMAIN}
  cloudflared:
    image: cloudflare/cloudflared:${CLOUDFLARED_VERSION}
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
  mongo:
    image: mongo:${MONGO_VERSION}
    container_name: mongo
    restart: always
    volumes:
      - /home/mongo-volume:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  plugins-api:
    build:
      context: https://github.com/Remote-Falcon/remote-falcon-plugins-api.git
      args:
        - OTEL_OPTS=
    image: plugins-api:${RF_CONTAINER_BUILD_DATE}
    container_name: plugins-api
    restart: always
    environment:
      - server.port=8083
      - spring.data.mongodb.uri=mongodb://root:root@mongo:27017/remote-falcon?authSource=admin
      - server.servlet.context-path=/remote-falcon-plugins-api
      - sequence-limit=200
    depends_on:
      - mongo
  control-panel:
    build:
      context: https://github.com/Remote-Falcon/remote-falcon-control-panel.git
      args:
        - OTEL_OPTS=
    image: control-panel:${RF_CONTAINER_BUILD_DATE}
    container_name: control-panel
    restart: always
    environment:
      - server.port=8081
      - web.url=https://${DOMAIN}
      - auto-validate-email=${AUTO_VALIDATE_EMAIL}
      - jwt.user=${VIEWER_JWT_KEY}
      - spring.data.mongodb.uri=mongodb://root:root@mongo:27017/remote-falcon?authSource=admin
      - github.pat=${GITHUB_PAT}
      - sendgrid.key=${SENDGRID_KEY}
      - client.header=${CLIENT_HEADER}
    depends_on:
      - mongo
  viewer:
    build:
      context: https://github.com/Remote-Falcon/remote-falcon-viewer.git
      args:
        - OTEL_OPTS=
    image: viewer:${RF_CONTAINER_BUILD_DATE}
    container_name: viewer
    restart: always
    environment:
      - server.port=8082
      - jwt.viewer=${VIEWER_JWT_KEY}
      - spring.data.mongodb.uri=mongodb://root:root@mongo:27017/remote-falcon?authSource=admin
      - client.header=${CLIENT_HEADER}
    depends_on:
      - mongo
  ui:
    build:
      context: https://github.com/Remote-Falcon/remote-falcon-ui.git
      args:
        - HOST_ENV=${HOST_ENV}
        - VERSION=${VERSION}
        - CONTROL_PANEL_API=https://${DOMAIN}/remote-falcon-control-panel
        - VIEWER_API=https://${DOMAIN}/remote-falcon-viewer
        - VIEWER_JWT_KEY=${VIEWER_JWT_KEY}
        - GOOGLE_MAPS_KEY=${GOOGLE_MAPS_KEY}
        - PUBLIC_POSTHOG_HOST=${PUBLIC_POSTHOG_HOST}
        - PUBLIC_POSTHOG_KEY=${PUBLIC_POSTHOG_KEY}
        - GA_TRACKING_ID=${GA_TRACKING_ID}
        - HOSTNAME_PARTS=${HOSTNAME_PARTS}
        - SOCIAL_META=${SOCIAL_META}
    image: ui:${RF_CONTAINER_BUILD_DATE}
    container_name: ui
    restart: always
    depends_on:
      - control-panel
      - viewer
  external-api:
    build:
      context: https://github.com/Remote-Falcon/remote-falcon-external-api.git
      args:
        - OTEL_OPTS=
    image: external-api:${RF_CONTAINER_BUILD_DATE}
    container_name: external-api
    restart: always
    environment:
      - server.port=8084
      - spring.data.mongodb.uri=mongodb://root:root@mongo:27017/remote-falcon?authSource=admin
      - viewer.api.url=https://${DOMAIN}/remote-falcon-viewer
    depends_on:
      - mongo